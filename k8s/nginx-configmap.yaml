apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  nginx.conf: |
    events {
      worker_connections 4096;
    }
    
    http {
      upstream fastapi_cluster {
        # Round-robin load balancing to FastAPI service
        server fastapi-service:80;
        
        # Connection keepalive
        keepalive 32;
      }
      
      # Access log format
      log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" '
                      'rt=$request_time uct="$upstream_connect_time" '
                      'uht="$upstream_header_time" urt="$upstream_response_time"';
      
      access_log /var/log/nginx/access.log main;
      error_log /var/log/nginx/error.log warn;
      
      server {
        listen 80;
        server_name _;
        
        # Client body size limit
        client_max_body_size 10M;
        
        location / {
          proxy_pass http://fastapi_cluster;
          proxy_http_version 1.1;
          
          # Headers
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          
          # Timeouts
          proxy_connect_timeout 60s;
          proxy_send_timeout 60s;
          proxy_read_timeout 60s;
          
          # Connection reuse
          proxy_set_header Connection "";
        }
        
        # Health check endpoint for NGINX itself
        location /nginx-health {
          access_log off;
          return 200 "healthy\n";
          add_header Content-Type text/plain;
        }
      }
    }
